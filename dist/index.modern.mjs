import t from"util";import s from"amqplib";class o{constructor(s){this.user=void 0,this.password=void 0,this.host=void 0,this.port=void 0,this.vhost=void 0,this.url=void 0,this.user=s.user,this.password=s.password,this.host=s.host,this.port=s.port,this.vhost=s.vhost,this.url=t.format("amqp://%s:%s@%s:%s/%s",this.user,this.password,this.host,this.port,this.vhost)}async connect(t){const o=await s.connect(t);return await o.createChannel()}async send(t){console.log(" [x] Sent %s",t.data),console.log("[connectionURL]",this.url);const s=await this.connect(this.url);console.log("[Channel]",s),s.assertQueue(t.queue,{durable:!0}),s.sendToQueue(t.queue,Buffer.from(t.data))}}class e extends o{}var r;r=e,[class extends o{constructor(...t){super(...t),this.queue="email_notification"}sendEmail(t){this.send({data:t,queue:this.queue})}}].forEach(t=>{Object.getOwnPropertyNames(t.prototype).forEach(s=>{Object.defineProperty(r.prototype,s,Object.getOwnPropertyDescriptor(t.prototype,s))})});export{e as default};
