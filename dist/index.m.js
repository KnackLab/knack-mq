import t from"util";import o from"amqplib";import{cleanEnv as e,str as r,port as n}from"envalid";function s(t,o){t.prototype=Object.create(o.prototype),t.prototype.constructor=t,i(t,o)}function i(t,o){return i=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,o){return t.__proto__=o,t},i(t,o)}require("dotenv").config();var u,c=/*#__PURE__*/function(){function s(o){this.user=void 0,this.password=void 0,this.host=void 0,this.port=void 0,this.vhost=void 0,this.url=void 0,this.canUseEnvConfig(o)?e(process.env,{RABBITMQ_HOST:r(),RABBITMQ_PASSWORD:r(),RABBITMQ_PORT:n({default:5672}),RABBITMQ_USER:r(),RABBITMQ_VHOST:r()}):(this.user=o.user,this.password=o.password,this.host=o.host,this.port=o.port,this.vhost=o.vhost),this.url=t.format("amqp://%s:%s@%s:%s/%s",this.user||process.env.RABBITMQ_USER,this.password||process.env.RABBITMQ_PASSWORD,this.host||process.env.RABBITMQ_HOST,this.port||process.env.RABBITMQ_PORT,this.vhost||process.env.RABBITMQ_VHOST)}var i=s.prototype;return i.canUseEnvConfig=function(t){return void 0!==t.useEnvironmentConfig},i.connect=function(t){try{return Promise.resolve(o.connect(t)).then(function(t){return Promise.resolve(t.createChannel())})}catch(t){return Promise.reject(t)}},i.send=function(t){try{return console.log("[Data]",t),Promise.resolve(this.connect(this.url)).then(function(o){o.assertQueue(t.queue,{durable:!0});var e=o.sendToQueue(t.queue,Buffer.from(JSON.stringify(t.data)));console.log("[MQ Status]",e),console.log(" [x] Sent %s",t.data)})}catch(t){return Promise.reject(t)}},s}(),p=/*#__PURE__*/function(t){function o(){return t.apply(this,arguments)||this}return s(o,t),o.prototype.sendEmail=function(t,o){void 0===o&&(o="email_notification"),this.send({data:t,queue:o})},o}(c),a=/*#__PURE__*/function(t){function o(){return t.apply(this,arguments)||this}return s(o,t),o}(c);u=a,[p].forEach(function(t){Object.getOwnPropertyNames(t.prototype).forEach(function(o){Object.defineProperty(u.prototype,o,Object.getOwnPropertyDescriptor(t.prototype,o))})});export{a as default};
