import t from"util";import o from"amqplib";function e(t,o){t.prototype=Object.create(o.prototype),t.prototype.constructor=t,r(t,o)}function r(t,o){return r=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,o){return t.__proto__=o,t},r(t,o)}var n,s=/*#__PURE__*/function(){function e(o){this.user=void 0,this.password=void 0,this.host=void 0,this.port=void 0,this.vhost=void 0,this.url=void 0,this.user=o.user,this.password=o.password,this.host=o.host,this.port=o.port,this.vhost=o.vhost,this.url=t.format("amqp://%s:%s@%s:%s/%s",this.user,this.password,this.host,this.port,this.vhost)}var r=e.prototype;return r.connect=function(t){try{return Promise.resolve(o.connect(t)).then(function(t){return Promise.resolve(t.createChannel())})}catch(t){return Promise.reject(t)}},r.send=function(t){try{var o=this;return console.log(" [x] Sent %s",t.data),console.log("[connectionURL]",o.url),Promise.resolve(o.connect(o.url)).then(function(o){console.log("[Channel]",o),o.assertQueue(t.queue,{durable:!0}),o.sendToQueue(t.queue,Buffer.from(t.data))})}catch(t){return Promise.reject(t)}},e}(),i=/*#__PURE__*/function(t){function o(){for(var o,e=arguments.length,r=new Array(e),n=0;n<e;n++)r[n]=arguments[n];return(o=t.call.apply(t,[this].concat(r))||this).queue="email_notification",o}return e(o,t),o.prototype.sendEmail=function(t){this.send({data:t,queue:this.queue})},o}(s),u=/*#__PURE__*/function(t){function o(){return t.apply(this,arguments)||this}return e(o,t),o}(s);n=u,[i].forEach(function(t){Object.getOwnPropertyNames(t.prototype).forEach(function(o){Object.defineProperty(n.prototype,o,Object.getOwnPropertyDescriptor(t.prototype,o))})});export{u as default};
