{"code":"import util from 'util';\r\nimport amqp from 'amqplib';\r\nexport class Base {\r\n    queue;\r\n    user;\r\n    password;\r\n    host;\r\n    port;\r\n    vhost;\r\n    url;\r\n    connection;\r\n    constructor(config) {\r\n        this.queue = config.queue;\r\n        this.user = config.user;\r\n        this.password = config.password;\r\n        this.host = config.host;\r\n        this.port = config.port;\r\n        this.vhost = config.vhost;\r\n        this.url = util.format('amqp://%s:%s@%s:%s/%s', this.user, this.password, this.host, this.port, this.vhost);\r\n    }\r\n    async connect(url) {\r\n        const conn = await amqp.connect(url);\r\n        const channel = await conn.createChannel();\r\n        return channel;\r\n    }\r\n    async send(message) {\r\n        const channel = await this.connect(this.url);\r\n        channel.assertQueue(message.queue, {\r\n            durable: true,\r\n        });\r\n        channel.sendToQueue(message.queue, Buffer.from(message.data));\r\n        console.log(' [x] Sent %s', message.data);\r\n    }\r\n}\r\n","references":["/Users/israelayokunnu/Documents/Work/Knack/BE/NPM packages/knack-mq/node_modules/util/util.js","/Users/israelayokunnu/Documents/Work/Knack/BE/NPM packages/knack-mq/node_modules/@types/amqplib/index.d.ts"],"dts":{"name":"/Users/israelayokunnu/Documents/Work/Knack/BE/NPM packages/knack-mq/dist/base.d.ts","writeByteOrderMark":false,"text":"declare type IQueue = 'email_notification';\r\ninterface IMessage {\r\n    queue: IQueue;\r\n    data: any;\r\n}\r\ninterface IConfig {\r\n    queue: string;\r\n    user: string;\r\n    password: string;\r\n    host: string;\r\n    port: string;\r\n    vhost: string;\r\n}\r\nexport declare abstract class Base {\r\n    private queue;\r\n    private user;\r\n    private password;\r\n    private host;\r\n    private port;\r\n    private vhost;\r\n    private url;\r\n    private connection;\r\n    constructor(config: IConfig);\r\n    private connect;\r\n    protected send(message: IMessage): Promise<void>;\r\n}\r\nexport {};\r\n"}}
